<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.jfsoft.bbs.dao.BbsPostsDao">

    <!-- 可根据自己的需求，是否要使用 -->
    <resultMap type="com.jfsoft.bbs.entity.BbsPostsEntity" id="bbsPostsMap">
        <result property="id" column="id"/>
        <result property="content" column="content"/>
        <result property="good" column="good"/>
        <result property="initTime" column="init_time"/>
        <result property="labelId" column="label_id"/>
        <result property="replyCount" column="reply_count"/>
        <result property="title" column="title"/>
        <result property="top" column="top"/>
        <result property="userId" column="user_id"/>
        <result property="author" column="author"/>
        <result property="end" column="end"/>
        <result property="icon" column="icon"/>
        <result property="labelName" column="label_name"/>
        <result property="rewardGrade" column="reward_grade"/>
        <result property="collectionStatus" column="collection_status"/>
        <result property="collectionTime" column="collection_time"/>
        <result property="isDel" column="is_del"/>
        <result property="isVote" column="is_vote"/>
        <result property="tagId" column="tag_id"/>
        <result property="tagName" column="tag_name"/>
        <result property="lastReply" column="last_reply"/>
        <result property="isTemp" column="is_temp"/>
        <result property="readCount" column="read_count"/>
        <result property="updateTime" column="update_time"/>
    </resultMap>

    <select id="getList" parameterType="map" resultMap="bbsPostsMap">
        SELECT DISTINCT bp.id as id, bp.good as good, bp.user_id as user_id, bp.content as content, bp.init_time as
        init_time,
        bp.label_id as label_id, bl.name as label_name, bp.reply_count as reply_count, bp.title as title, bp.top as top,
        bp.end as end, bp.reward_grade as reward_grade, bu.username as author, bu.icon as icon, bp.tag_id as tag_id,
        bt.name as tag_name
        , IFNULL((select init_time from bbs_reply where posts_id=bp.id order by init_time desc limit 1), bp.init_time)
        as replytime
        FROM bbs_posts bp
        LEFT JOIN bbs_user bu ON bp.user_id = bu.id
        LEFT JOIN bbs_label bl ON bl.id = bp.label_id
        LEFT JOIN bbs_reply br ON bp.id = br.posts_id
        LEFT JOIN bbs_tag bt ON bt.id = bp.tag_id
        WHERE 1 = 1
        <if test="good != null and good != ''">
            AND bp.good = true
        </if>
        <if test="end != null">
            AND bp.end = #{end}
        </if>
        <if test="labelId != null and labelId != ''">
            AND bp.label_id = #{labelId}
        </if>
        <if test="tagId != null and tagId != ''">
            AND bp.tag_id = #{tagId}
        </if>
        <if test="beginTime != null and beginTime != ''">
            AND bp.init_time &gt;= #{beginTime}
        </if>
        <if test="endTime != null and endTime != ''">
            AND bp.init_time &lt;= #{endTime}
        </if>
        AND bp.is_del = false
        <if test="order != null and order != ''">
            ORDER BY
            <choose>
                <when test="order == 'init_time'">
                    replytime DESC
                </when>
                <when test="order == 'reply_count'">
                    bp.reply_count DESC, replytime DESC
                </when>
            </choose>
        </if>
        LIMIT #{startPage}, #{endPage}
    </select>

    <select id="getTopList" parameterType="map" resultMap="bbsPostsMap">
        SELECT bp.id as id, bp.good as good, bp.user_id as user_id, bp.content as content, bp.init_time as init_time,
        bp.label_id as label_id, bl.name as label_name, bp.reply_count as reply_count, bp.title as title, bp.top as top,
        bp.end as end, bp.reward_grade as reward_grade, bu.username as author, bu.icon as icon, bp.tag_id as tag_id, bt.name as tag_name
        FROM bbs_posts bp
        LEFT JOIN bbs_user bu ON bp.user_id=bu.id
        LEFT JOIN bbs_label bl ON bl.id = bp.label_id
        LEFT JOIN bbs_tag bt ON bt.id = bp.tag_id
        WHERE 1 = 1
          AND bp.top = TRUE
          ORDER BY bp.init_time DESC , bp.reply_count DESC
        LIMIT 0, 4
    </select>

    <select id="getPostByID" parameterType="integer" resultMap="bbsPostsMap">
        SELECT bp.id as id, bp.good as good, bp.user_id as user_id, bp.content as content, bp.init_time as init_time,
        bp.is_vote as is_vote, bp.tag_id as tag_id,
        bp.label_id as label_id, bp.reply_count as reply_count, bp.title as title, bp.top as top, bp.end as end,
        bp.reward_grade as reward_grade, bu.username as author, bu.icon as icon, IFNULL(bc.status, FALSE) as collection_status,
        bp.read_count as read_count
        FROM bbs_posts bp
         LEFT JOIN bbs_user bu ON bp.user_id = bu.id
        LEFT JOIN bbs_collection bc ON bc.post_id = bp.id AND bc.user_id = #{userId}
        WHERE bp.id = #{id} AND bp.is_del = false
    </select>

    <select id="getPostByCollection" parameterType="integer" resultMap="bbsPostsMap">
        SELECT bp.*, bc.init_time as collection_time
        FROM bbs_collection bc LEFT JOIN bbs_posts bp ON bc.post_id = bp.id
        WHERE bc.user_id = #{userId} ORDER BY bc.init_time DESC
    </select>

    <select id="findAll" resultMap="bbsPostsMap">
        select * from bbs_posts
    </select>

    <select id="getPostByReplyId" parameterType="integer" resultMap="bbsPostsMap">
        SELECT bp.*
        FROM bbs_posts bp
        WHERE bp.id = (SELECT posts_id FROM bbs_reply br WHERE br.id = #{replyId})
    </select>

    <select id="getTodayCount" resultType="int">
        SELECT COUNT(1) FROM bbs_posts WHERE (date_format(init_time,'%Y-%m-%d') = date_sub(curdate(),interval 0 day))
    </select>

    <select id="getYesterdayCount" resultType="int">
        SELECT COUNT(1) FROM bbs_posts WHERE (date_format(init_time,'%Y-%m-%d') = date_sub(curdate(),interval 1 day))
    </select>

    <select id="getListByReplyTime" parameterType="map" resultMap="bbsPostsMap">
      select * from bbs_posts where id in (
       select posts_id from bbs_reply order by init_time desc
       ) limit ${currPage},${limit}
    </select>

    <select id="getPostsList" parameterType="map" resultMap="bbsPostsMap">
        select bp.id, bp.title, bu.username as author, bu.icon, bp.init_time, max(br.init_time) as last_reply, count(br.id)
        as reply_count, case when max(br.init_time) is not null then max(br.init_time) else bp.init_time end as order_by_time
        from bbs_posts bp
        left join bbs_user bu on bu.id = bp.user_id
        left join bbs_reply br on br.posts_id = bp.id
        where bp.is_del = false and bp.is_temp = false
        <if test="labelId != null and labelId != ''">
            and bp.label_id = #{labelId}
        </if>
        <if test="tagId != null and tagId != ''">
            and bp.tag_id = #{tagId}
        </if>
        <if test="sortType == 2">
            and bp.good = true
        </if>
        group by bp.title, bu.name, bu.icon, bp.init_time
        <if test="sortType == 0">
            order by order_by_time desc
        </if>
        <if test="sortType == 1">
            order by reply_count desc, order_by_time desc
        </if>
        <if test="sortType == 2">
            order by order_by_time desc
        </if>
        LIMIT #{startPage}, #{endPage}
    </select>

    <select id="getPostCount" parameterType="java.lang.Integer" resultType="java.lang.Integer">
        select count(-1) from bbs_posts where label_id=#{id} and is_del=false and is_temp=false
    </select>
</mapper>