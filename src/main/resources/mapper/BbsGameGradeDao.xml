<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.jfsoft.bbs.dao.BbsGameGradeDao">

    <!-- 可根据自己的需求，是否要使用 -->
    <resultMap type="com.jfsoft.bbs.entity.BbsGameGradeEntity" id="bbsGameGradeMap">
        <result property="id" column="id"/>
        <result property="initTime" column="init_time"/>
        <result property="userId" column="user_id"/>
        <result property="gameId" column="game_id"/>
        <result property="grade" column="grade"/>
        <result property="userName" column="user_name"/>
        <result property="userIcon" column="user_icon"/>
        <result property="sumGrade" column="sum_grade"/>
    </resultMap>

    <select id="getFirstGrade" resultMap="bbsGameGradeMap">
        select bgg.id, bgg.user_id, bgg.game_id, bgg.grade as grade, bgg.init_time, bu.username as user_name, bu.icon as user_icon
        from  bbs_game_grade bgg
        inner join bbs_user bu on bu.id = bgg.user_id
        where game_id = #{gameId} order by grade desc limit 1
    </select>

    <select id="getRankList" resultMap="bbsGameGradeMap">
        select bgg.id, bgg.user_id, bgg.game_id, bgg.grade, bgg.init_time, bu.username as user_name, bu.icon as user_icon
        from bbs_game_grade bgg
        left join bbs_user bu on bu.id = bgg.user_id
        where bgg.game_id = #{gameId}
        order by bgg.grade desc
    </select>

    <select id="getSumRankList" resultMap="bbsGameGradeMap">
        select bgg.user_id, sum(bgg.grade) as sum_grade, bu.username as user_name, bu.icon as user_icon
        from bbs_game_grade bgg, bbs_user bu
        where bu.id = bgg.user_id
        group by bgg.user_id
        order by sum_grade desc
        limit 10
    </select>

    <select id="getRankAll" resultMap="bbsGameGradeMap">
        select bg.user_id, bu.username as user_name, bu.icon as user_icon,game_id,bgrg.grade as sum_grade,bg.grade
        from (
        select c.*,h.pre_game_user_count,
        case when @a=1 and pre_game_user_count is null  then @rownum:=1 else @rownum:=@rownum+1 end as rownum,
        case when pre_game_user_count is not null then @a:=1 else @a:=0 end as temp
        from (
            SELECT a.*
            from
            bbs_game_grade a LEFT JOIN bbs_game_grade b ON a.game_id=b.game_id AND a.grade &lt; b.grade
            GROUP BY a.user_id,a.game_id,a.grade HAVING COUNT(b.id) &lt; 10
            ORDER BY a.game_id,a.grade DESC
            ) c left join (
            select game_id,min(grade) as pre_game_user_count
            from (
            SELECT z.*
            FROM bbs_game_grade z
            LEFT JOIN bbs_game_grade x ON z.game_id=x.game_id AND z.grade &lt; x.grade
            GROUP BY z.user_id,z.game_id,z.grade HAVING COUNT(x.id) &lt; 10
            ORDER BY z.game_id,z.grade DESC ) bgg group by game_id) h
            on c.game_id=h.game_id and pre_game_user_count=c.grade , (select @rownum:=0) g,(select @1:=0) j
        ) bg
            inner join bbs_game_rank_grade bgrg on bg.rownum=bgrg.Rank_id
            left join bbs_user bu on bg.user_id=bu.id;
    </select>
</mapper>